package cn.livedoor.security.sysguard.persistence.sqlmapdao;

import cn.livedoor.security.sysguard.domain.DataInfoType;
import cn.livedoor.security.sysguard.domain.DataInfoTypeExample;
import com.ibatis.dao.client.DaoManager;
import com.ibatis.dao.client.template.SqlMapDaoTemplate;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DataInfoTypeDAOImpl extends SqlMapDaoTemplate implements DataInfoTypeDAO {

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table data_info_type
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public DataInfoTypeDAOImpl(DaoManager daoManager) {
	super(daoManager);
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table data_info_type
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public void insert(DataInfoType record) {
	insert("data_info_type.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table data_info_type
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public int updateByPrimaryKey(DataInfoType record) {
	int rows = update("data_info_type.abatorgenerated_updateByPrimaryKey", record);
	return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table data_info_type
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public int updateByPrimaryKeySelective(DataInfoType record) {
	int rows = update("data_info_type.abatorgenerated_updateByPrimaryKeySelective", record);
	return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table data_info_type
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public List selectByExample(DataInfoTypeExample example, String orderByClause) {
	Map parms = getExampleParms(example);
	if (orderByClause != null) {
	    parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
	}
	List list = queryForList("data_info_type.abatorgenerated_selectByExample", parms);
	return list;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table data_info_type
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public List selectByExample(DataInfoTypeExample example) {
	return selectByExample(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table data_info_type
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public DataInfoType selectByPrimaryKey(Integer typeId) {
	DataInfoType key = new DataInfoType();
	key.setTypeId(typeId);
	DataInfoType record = (DataInfoType) queryForObject("data_info_type.abatorgenerated_selectByPrimaryKey", key);
	return record;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table data_info_type
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public int deleteByExample(DataInfoTypeExample example) {
	int rows = delete("data_info_type.abatorgenerated_deleteByExample", getExampleParms(example));
	return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table data_info_type
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public int deleteByPrimaryKey(Integer typeId) {
	DataInfoType key = new DataInfoType();
	key.setTypeId(typeId);
	int rows = delete("data_info_type.abatorgenerated_deleteByPrimaryKey", key);
	return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table data_info_type
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    private Map gettype_idExampleParms(DataInfoTypeExample example) {
	Map parms = new HashMap();
	switch (example.getTypeId_Indicator()) {
	case DataInfoTypeExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_type_id_NULL", "Y");
	    } else {
		parms.put("AND_type_id_NULL", "Y");
	    }
	    break;
	case DataInfoTypeExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_type_id_NOT_NULL", "Y");
	    } else {
		parms.put("AND_type_id_NOT_NULL", "Y");
	    }
	    break;
	case DataInfoTypeExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_type_id_EQUALS", "Y");
	    } else {
		parms.put("AND_type_id_EQUALS", "Y");
	    }
	    parms.put("typeId", example.getTypeId());
	    break;
	case DataInfoTypeExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_type_id_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_type_id_NOT_EQUALS", "Y");
	    }
	    parms.put("typeId", example.getTypeId());
	    break;
	case DataInfoTypeExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_type_id_GT", "Y");
	    } else {
		parms.put("AND_type_id_GT", "Y");
	    }
	    parms.put("typeId", example.getTypeId());
	    break;
	case DataInfoTypeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_type_id_GE", "Y");
	    } else {
		parms.put("AND_type_id_GE", "Y");
	    }
	    parms.put("typeId", example.getTypeId());
	    break;
	case DataInfoTypeExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_type_id_LT", "Y");
	    } else {
		parms.put("AND_type_id_LT", "Y");
	    }
	    parms.put("typeId", example.getTypeId());
	    break;
	case DataInfoTypeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_type_id_LE", "Y");
	    } else {
		parms.put("AND_type_id_LE", "Y");
	    }
	    parms.put("typeId", example.getTypeId());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table data_info_type
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    private Map gettype_nameExampleParms(DataInfoTypeExample example) {
	Map parms = new HashMap();
	switch (example.getTypeName_Indicator()) {
	case DataInfoTypeExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_type_name_NULL", "Y");
	    } else {
		parms.put("AND_type_name_NULL", "Y");
	    }
	    break;
	case DataInfoTypeExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_type_name_NOT_NULL", "Y");
	    } else {
		parms.put("AND_type_name_NOT_NULL", "Y");
	    }
	    break;
	case DataInfoTypeExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_type_name_EQUALS", "Y");
	    } else {
		parms.put("AND_type_name_EQUALS", "Y");
	    }
	    parms.put("typeName", example.getTypeName());
	    break;
	case DataInfoTypeExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_type_name_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_type_name_NOT_EQUALS", "Y");
	    }
	    parms.put("typeName", example.getTypeName());
	    break;
	case DataInfoTypeExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_type_name_GT", "Y");
	    } else {
		parms.put("AND_type_name_GT", "Y");
	    }
	    parms.put("typeName", example.getTypeName());
	    break;
	case DataInfoTypeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_type_name_GE", "Y");
	    } else {
		parms.put("AND_type_name_GE", "Y");
	    }
	    parms.put("typeName", example.getTypeName());
	    break;
	case DataInfoTypeExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_type_name_LT", "Y");
	    } else {
		parms.put("AND_type_name_LT", "Y");
	    }
	    parms.put("typeName", example.getTypeName());
	    break;
	case DataInfoTypeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_type_name_LE", "Y");
	    } else {
		parms.put("AND_type_name_LE", "Y");
	    }
	    parms.put("typeName", example.getTypeName());
	    break;
	case DataInfoTypeExample.EXAMPLE_LIKE:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_type_name_LIKE", "Y");
	    } else {
		parms.put("AND_type_name_LIKE", "Y");
	    }
	    parms.put("typeName", example.getTypeName());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table data_info_type
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    private Map getwarn_valueExampleParms(DataInfoTypeExample example) {
	Map parms = new HashMap();
	switch (example.getWarnValue_Indicator()) {
	case DataInfoTypeExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_warn_value_NULL", "Y");
	    } else {
		parms.put("AND_warn_value_NULL", "Y");
	    }
	    break;
	case DataInfoTypeExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_warn_value_NOT_NULL", "Y");
	    } else {
		parms.put("AND_warn_value_NOT_NULL", "Y");
	    }
	    break;
	case DataInfoTypeExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_warn_value_EQUALS", "Y");
	    } else {
		parms.put("AND_warn_value_EQUALS", "Y");
	    }
	    parms.put("warnValue", example.getWarnValue());
	    break;
	case DataInfoTypeExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_warn_value_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_warn_value_NOT_EQUALS", "Y");
	    }
	    parms.put("warnValue", example.getWarnValue());
	    break;
	case DataInfoTypeExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_warn_value_GT", "Y");
	    } else {
		parms.put("AND_warn_value_GT", "Y");
	    }
	    parms.put("warnValue", example.getWarnValue());
	    break;
	case DataInfoTypeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_warn_value_GE", "Y");
	    } else {
		parms.put("AND_warn_value_GE", "Y");
	    }
	    parms.put("warnValue", example.getWarnValue());
	    break;
	case DataInfoTypeExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_warn_value_LT", "Y");
	    } else {
		parms.put("AND_warn_value_LT", "Y");
	    }
	    parms.put("warnValue", example.getWarnValue());
	    break;
	case DataInfoTypeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_warn_value_LE", "Y");
	    } else {
		parms.put("AND_warn_value_LE", "Y");
	    }
	    parms.put("warnValue", example.getWarnValue());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table data_info_type
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    private Map geterror_valueExampleParms(DataInfoTypeExample example) {
	Map parms = new HashMap();
	switch (example.getErrorValue_Indicator()) {
	case DataInfoTypeExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_error_value_NULL", "Y");
	    } else {
		parms.put("AND_error_value_NULL", "Y");
	    }
	    break;
	case DataInfoTypeExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_error_value_NOT_NULL", "Y");
	    } else {
		parms.put("AND_error_value_NOT_NULL", "Y");
	    }
	    break;
	case DataInfoTypeExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_error_value_EQUALS", "Y");
	    } else {
		parms.put("AND_error_value_EQUALS", "Y");
	    }
	    parms.put("errorValue", example.getErrorValue());
	    break;
	case DataInfoTypeExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_error_value_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_error_value_NOT_EQUALS", "Y");
	    }
	    parms.put("errorValue", example.getErrorValue());
	    break;
	case DataInfoTypeExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_error_value_GT", "Y");
	    } else {
		parms.put("AND_error_value_GT", "Y");
	    }
	    parms.put("errorValue", example.getErrorValue());
	    break;
	case DataInfoTypeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_error_value_GE", "Y");
	    } else {
		parms.put("AND_error_value_GE", "Y");
	    }
	    parms.put("errorValue", example.getErrorValue());
	    break;
	case DataInfoTypeExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_error_value_LT", "Y");
	    } else {
		parms.put("AND_error_value_LT", "Y");
	    }
	    parms.put("errorValue", example.getErrorValue());
	    break;
	case DataInfoTypeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_error_value_LE", "Y");
	    } else {
		parms.put("AND_error_value_LE", "Y");
	    }
	    parms.put("errorValue", example.getErrorValue());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table data_info_type
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    private Map getdata_commandExampleParms(DataInfoTypeExample example) {
	Map parms = new HashMap();
	switch (example.getDataCommand_Indicator()) {
	case DataInfoTypeExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_data_command_NULL", "Y");
	    } else {
		parms.put("AND_data_command_NULL", "Y");
	    }
	    break;
	case DataInfoTypeExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_data_command_NOT_NULL", "Y");
	    } else {
		parms.put("AND_data_command_NOT_NULL", "Y");
	    }
	    break;
	case DataInfoTypeExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_data_command_EQUALS", "Y");
	    } else {
		parms.put("AND_data_command_EQUALS", "Y");
	    }
	    parms.put("dataCommand", example.getDataCommand());
	    break;
	case DataInfoTypeExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_data_command_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_data_command_NOT_EQUALS", "Y");
	    }
	    parms.put("dataCommand", example.getDataCommand());
	    break;
	case DataInfoTypeExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_data_command_GT", "Y");
	    } else {
		parms.put("AND_data_command_GT", "Y");
	    }
	    parms.put("dataCommand", example.getDataCommand());
	    break;
	case DataInfoTypeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_data_command_GE", "Y");
	    } else {
		parms.put("AND_data_command_GE", "Y");
	    }
	    parms.put("dataCommand", example.getDataCommand());
	    break;
	case DataInfoTypeExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_data_command_LT", "Y");
	    } else {
		parms.put("AND_data_command_LT", "Y");
	    }
	    parms.put("dataCommand", example.getDataCommand());
	    break;
	case DataInfoTypeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_data_command_LE", "Y");
	    } else {
		parms.put("AND_data_command_LE", "Y");
	    }
	    parms.put("dataCommand", example.getDataCommand());
	    break;
	case DataInfoTypeExample.EXAMPLE_LIKE:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_data_command_LIKE", "Y");
	    } else {
		parms.put("AND_data_command_LIKE", "Y");
	    }
	    parms.put("dataCommand", example.getDataCommand());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table data_info_type
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    private Map getinput_timeExampleParms(DataInfoTypeExample example) {
	Map parms = new HashMap();
	switch (example.getInputTime_Indicator()) {
	case DataInfoTypeExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_NULL", "Y");
	    } else {
		parms.put("AND_input_time_NULL", "Y");
	    }
	    break;
	case DataInfoTypeExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_NOT_NULL", "Y");
	    } else {
		parms.put("AND_input_time_NOT_NULL", "Y");
	    }
	    break;
	case DataInfoTypeExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_EQUALS", "Y");
	    } else {
		parms.put("AND_input_time_EQUALS", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	case DataInfoTypeExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_input_time_NOT_EQUALS", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	case DataInfoTypeExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_GT", "Y");
	    } else {
		parms.put("AND_input_time_GT", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	case DataInfoTypeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_GE", "Y");
	    } else {
		parms.put("AND_input_time_GE", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	case DataInfoTypeExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_LT", "Y");
	    } else {
		parms.put("AND_input_time_LT", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	case DataInfoTypeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_LE", "Y");
	    } else {
		parms.put("AND_input_time_LE", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table data_info_type
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    private Map getExampleParms(DataInfoTypeExample example) {
	Map parms = new HashMap();
	parms.putAll(gettype_idExampleParms(example));
	parms.putAll(gettype_nameExampleParms(example));
	parms.putAll(getwarn_valueExampleParms(example));
	parms.putAll(geterror_valueExampleParms(example));
	parms.putAll(getdata_commandExampleParms(example));
	parms.putAll(getinput_timeExampleParms(example));
	return parms;
    }
}