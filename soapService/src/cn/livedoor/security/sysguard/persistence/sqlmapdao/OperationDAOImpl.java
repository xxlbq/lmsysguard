package cn.livedoor.security.sysguard.persistence.sqlmapdao;

import cn.livedoor.security.sysguard.domain.Operation;
import cn.livedoor.security.sysguard.domain.OperationExample;
import cn.livedoor.security.sysguard.domain.OperationWithBLOBs;
import com.ibatis.dao.client.DaoManager;
import com.ibatis.dao.client.template.SqlMapDaoTemplate;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OperationDAOImpl extends SqlMapDaoTemplate implements OperationDAO {

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table operation
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public OperationDAOImpl(DaoManager daoManager) {
	super(daoManager);
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table operation
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public void insert(OperationWithBLOBs record) {
	insert("operation.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table operation
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public int updateByPrimaryKey(Operation record) {
	int rows = update("operation.abatorgenerated_updateByPrimaryKey", record);
	return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table operation
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public int updateByPrimaryKey(OperationWithBLOBs record) {
	int rows = update("operation.abatorgenerated_updateByPrimaryKeyWithBLOBs", record);
	return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table operation
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public int updateByPrimaryKeySelective(OperationWithBLOBs record) {
	int rows = update("operation.abatorgenerated_updateByPrimaryKeySelective", record);
	return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table operation
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public List selectByExampleWithoutBLOBs(OperationExample example, String orderByClause) {
	Map parms = getExampleParms(example);
	if (orderByClause != null) {
	    parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
	}
	List list = queryForList("operation.abatorgenerated_selectByExample", parms);
	return list;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table operation
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public List selectByExampleWithoutBLOBs(OperationExample example) {
	return selectByExampleWithoutBLOBs(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table operation
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public List selectByExampleWithBLOBs(OperationExample example, String orderByClause) {
	Map parms = getExampleParms(example);
	if (orderByClause != null) {
	    parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
	}
	List list = queryForList("operation.abatorgenerated_selectByExampleWithBLOBs", parms);
	return list;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table operation
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public List selectByExampleWithBLOBs(OperationExample example) {
	return selectByExampleWithBLOBs(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table operation
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public OperationWithBLOBs selectByPrimaryKey(Integer operId) {
	Operation key = new Operation();
	key.setOperId(operId);
	OperationWithBLOBs record = (OperationWithBLOBs) queryForObject("operation.abatorgenerated_selectByPrimaryKey", key);
	return record;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table operation
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public int deleteByExample(OperationExample example) {
	int rows = delete("operation.abatorgenerated_deleteByExample", getExampleParms(example));
	return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table operation
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    public int deleteByPrimaryKey(Integer operId) {
	Operation key = new Operation();
	key.setOperId(operId);
	int rows = delete("operation.abatorgenerated_deleteByPrimaryKey", key);
	return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table operation
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    private Map getoper_idExampleParms(OperationExample example) {
	Map parms = new HashMap();
	switch (example.getOperId_Indicator()) {
	case OperationExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_oper_id_NULL", "Y");
	    } else {
		parms.put("AND_oper_id_NULL", "Y");
	    }
	    break;
	case OperationExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_oper_id_NOT_NULL", "Y");
	    } else {
		parms.put("AND_oper_id_NOT_NULL", "Y");
	    }
	    break;
	case OperationExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_oper_id_EQUALS", "Y");
	    } else {
		parms.put("AND_oper_id_EQUALS", "Y");
	    }
	    parms.put("operId", example.getOperId());
	    break;
	case OperationExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_oper_id_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_oper_id_NOT_EQUALS", "Y");
	    }
	    parms.put("operId", example.getOperId());
	    break;
	case OperationExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_oper_id_GT", "Y");
	    } else {
		parms.put("AND_oper_id_GT", "Y");
	    }
	    parms.put("operId", example.getOperId());
	    break;
	case OperationExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_oper_id_GE", "Y");
	    } else {
		parms.put("AND_oper_id_GE", "Y");
	    }
	    parms.put("operId", example.getOperId());
	    break;
	case OperationExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_oper_id_LT", "Y");
	    } else {
		parms.put("AND_oper_id_LT", "Y");
	    }
	    parms.put("operId", example.getOperId());
	    break;
	case OperationExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_oper_id_LE", "Y");
	    } else {
		parms.put("AND_oper_id_LE", "Y");
	    }
	    parms.put("operId", example.getOperId());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table operation
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    private Map getuser_idExampleParms(OperationExample example) {
	Map parms = new HashMap();
	switch (example.getUserId_Indicator()) {
	case OperationExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_user_id_NULL", "Y");
	    } else {
		parms.put("AND_user_id_NULL", "Y");
	    }
	    break;
	case OperationExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_user_id_NOT_NULL", "Y");
	    } else {
		parms.put("AND_user_id_NOT_NULL", "Y");
	    }
	    break;
	case OperationExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_user_id_EQUALS", "Y");
	    } else {
		parms.put("AND_user_id_EQUALS", "Y");
	    }
	    parms.put("userId", example.getUserId());
	    break;
	case OperationExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_user_id_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_user_id_NOT_EQUALS", "Y");
	    }
	    parms.put("userId", example.getUserId());
	    break;
	case OperationExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_user_id_GT", "Y");
	    } else {
		parms.put("AND_user_id_GT", "Y");
	    }
	    parms.put("userId", example.getUserId());
	    break;
	case OperationExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_user_id_GE", "Y");
	    } else {
		parms.put("AND_user_id_GE", "Y");
	    }
	    parms.put("userId", example.getUserId());
	    break;
	case OperationExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_user_id_LT", "Y");
	    } else {
		parms.put("AND_user_id_LT", "Y");
	    }
	    parms.put("userId", example.getUserId());
	    break;
	case OperationExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_user_id_LE", "Y");
	    } else {
		parms.put("AND_user_id_LE", "Y");
	    }
	    parms.put("userId", example.getUserId());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table operation
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    private Map getinput_timeExampleParms(OperationExample example) {
	Map parms = new HashMap();
	switch (example.getInputTime_Indicator()) {
	case OperationExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_NULL", "Y");
	    } else {
		parms.put("AND_input_time_NULL", "Y");
	    }
	    break;
	case OperationExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_NOT_NULL", "Y");
	    } else {
		parms.put("AND_input_time_NOT_NULL", "Y");
	    }
	    break;
	case OperationExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_EQUALS", "Y");
	    } else {
		parms.put("AND_input_time_EQUALS", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	case OperationExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_input_time_NOT_EQUALS", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	case OperationExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_GT", "Y");
	    } else {
		parms.put("AND_input_time_GT", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	case OperationExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_GE", "Y");
	    } else {
		parms.put("AND_input_time_GE", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	case OperationExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_LT", "Y");
	    } else {
		parms.put("AND_input_time_LT", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	case OperationExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_LE", "Y");
	    } else {
		parms.put("AND_input_time_LE", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table operation
     * @abatorgenerated  Tue Oct 24 09:57:29 CST 2006
     */
    private Map getExampleParms(OperationExample example) {
	Map parms = new HashMap();
	parms.putAll(getoper_idExampleParms(example));
	parms.putAll(getuser_idExampleParms(example));
	parms.putAll(getinput_timeExampleParms(example));
	return parms;
    }
}