package cn.livedoor.security.sysguard.persistence.sqlmapdao;

import cn.livedoor.security.sysguard.domain.User;
import cn.livedoor.security.sysguard.domain.UserExample;
import com.ibatis.dao.client.DaoManager;
import com.ibatis.dao.client.template.SqlMapDaoTemplate;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UserDAOImpl extends SqlMapDaoTemplate implements UserDAO {

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    public UserDAOImpl(DaoManager daoManager) {
	super(daoManager);
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    public void insert(User record) {
	insert("user.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    public int updateByPrimaryKey(User record) {
	int rows = update("user.abatorgenerated_updateByPrimaryKey", record);
	return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    public int updateByPrimaryKeySelective(User record) {
	int rows = update("user.abatorgenerated_updateByPrimaryKeySelective", record);
	return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    public List selectByExample(UserExample example, String orderByClause) {
	Map parms = getExampleParms(example);
	if (orderByClause != null) {
	    parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
	}
	List list = queryForList("user.abatorgenerated_selectByExample", parms);
	return list;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    public List selectByExample(UserExample example) {
	return selectByExample(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    public User selectByPrimaryKey(Integer userId) {
	User key = new User();
	key.setUserId(userId);
	User record = (User) queryForObject("user.abatorgenerated_selectByPrimaryKey", key);
	return record;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    public int deleteByExample(UserExample example) {
	int rows = delete("user.abatorgenerated_deleteByExample", getExampleParms(example));
	return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    public int deleteByPrimaryKey(Integer userId) {
	User key = new User();
	key.setUserId(userId);
	int rows = delete("user.abatorgenerated_deleteByPrimaryKey", key);
	return rows;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    private Map getuser_idExampleParms(UserExample example) {
	Map parms = new HashMap();
	switch (example.getUserId_Indicator()) {
	case UserExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_user_id_NULL", "Y");
	    } else {
		parms.put("AND_user_id_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_user_id_NOT_NULL", "Y");
	    } else {
		parms.put("AND_user_id_NOT_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_user_id_EQUALS", "Y");
	    } else {
		parms.put("AND_user_id_EQUALS", "Y");
	    }
	    parms.put("userId", example.getUserId());
	    break;
	case UserExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_user_id_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_user_id_NOT_EQUALS", "Y");
	    }
	    parms.put("userId", example.getUserId());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_user_id_GT", "Y");
	    } else {
		parms.put("AND_user_id_GT", "Y");
	    }
	    parms.put("userId", example.getUserId());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_user_id_GE", "Y");
	    } else {
		parms.put("AND_user_id_GE", "Y");
	    }
	    parms.put("userId", example.getUserId());
	    break;
	case UserExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_user_id_LT", "Y");
	    } else {
		parms.put("AND_user_id_LT", "Y");
	    }
	    parms.put("userId", example.getUserId());
	    break;
	case UserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_user_id_LE", "Y");
	    } else {
		parms.put("AND_user_id_LE", "Y");
	    }
	    parms.put("userId", example.getUserId());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    private Map getrole_idExampleParms(UserExample example) {
	Map parms = new HashMap();
	switch (example.getRoleId_Indicator()) {
	case UserExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_role_id_NULL", "Y");
	    } else {
		parms.put("AND_role_id_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_role_id_NOT_NULL", "Y");
	    } else {
		parms.put("AND_role_id_NOT_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_role_id_EQUALS", "Y");
	    } else {
		parms.put("AND_role_id_EQUALS", "Y");
	    }
	    parms.put("roleId", example.getRoleId());
	    break;
	case UserExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_role_id_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_role_id_NOT_EQUALS", "Y");
	    }
	    parms.put("roleId", example.getRoleId());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_role_id_GT", "Y");
	    } else {
		parms.put("AND_role_id_GT", "Y");
	    }
	    parms.put("roleId", example.getRoleId());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_role_id_GE", "Y");
	    } else {
		parms.put("AND_role_id_GE", "Y");
	    }
	    parms.put("roleId", example.getRoleId());
	    break;
	case UserExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_role_id_LT", "Y");
	    } else {
		parms.put("AND_role_id_LT", "Y");
	    }
	    parms.put("roleId", example.getRoleId());
	    break;
	case UserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_role_id_LE", "Y");
	    } else {
		parms.put("AND_role_id_LE", "Y");
	    }
	    parms.put("roleId", example.getRoleId());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    private Map getnameExampleParms(UserExample example) {
	Map parms = new HashMap();
	switch (example.getName_Indicator()) {
	case UserExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_name_NULL", "Y");
	    } else {
		parms.put("AND_name_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_name_NOT_NULL", "Y");
	    } else {
		parms.put("AND_name_NOT_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_name_EQUALS", "Y");
	    } else {
		parms.put("AND_name_EQUALS", "Y");
	    }
	    parms.put("name", example.getName());
	    break;
	case UserExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_name_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_name_NOT_EQUALS", "Y");
	    }
	    parms.put("name", example.getName());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_name_GT", "Y");
	    } else {
		parms.put("AND_name_GT", "Y");
	    }
	    parms.put("name", example.getName());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_name_GE", "Y");
	    } else {
		parms.put("AND_name_GE", "Y");
	    }
	    parms.put("name", example.getName());
	    break;
	case UserExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_name_LT", "Y");
	    } else {
		parms.put("AND_name_LT", "Y");
	    }
	    parms.put("name", example.getName());
	    break;
	case UserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_name_LE", "Y");
	    } else {
		parms.put("AND_name_LE", "Y");
	    }
	    parms.put("name", example.getName());
	    break;
	case UserExample.EXAMPLE_LIKE:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_name_LIKE", "Y");
	    } else {
		parms.put("AND_name_LIKE", "Y");
	    }
	    parms.put("name", example.getName());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    private Map getreal_nameExampleParms(UserExample example) {
	Map parms = new HashMap();
	switch (example.getRealName_Indicator()) {
	case UserExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_real_name_NULL", "Y");
	    } else {
		parms.put("AND_real_name_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_real_name_NOT_NULL", "Y");
	    } else {
		parms.put("AND_real_name_NOT_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_real_name_EQUALS", "Y");
	    } else {
		parms.put("AND_real_name_EQUALS", "Y");
	    }
	    parms.put("realName", example.getRealName());
	    break;
	case UserExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_real_name_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_real_name_NOT_EQUALS", "Y");
	    }
	    parms.put("realName", example.getRealName());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_real_name_GT", "Y");
	    } else {
		parms.put("AND_real_name_GT", "Y");
	    }
	    parms.put("realName", example.getRealName());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_real_name_GE", "Y");
	    } else {
		parms.put("AND_real_name_GE", "Y");
	    }
	    parms.put("realName", example.getRealName());
	    break;
	case UserExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_real_name_LT", "Y");
	    } else {
		parms.put("AND_real_name_LT", "Y");
	    }
	    parms.put("realName", example.getRealName());
	    break;
	case UserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_real_name_LE", "Y");
	    } else {
		parms.put("AND_real_name_LE", "Y");
	    }
	    parms.put("realName", example.getRealName());
	    break;
	case UserExample.EXAMPLE_LIKE:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_real_name_LIKE", "Y");
	    } else {
		parms.put("AND_real_name_LIKE", "Y");
	    }
	    parms.put("realName", example.getRealName());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    private Map getpasswdExampleParms(UserExample example) {
	Map parms = new HashMap();
	switch (example.getPasswd_Indicator()) {
	case UserExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_passwd_NULL", "Y");
	    } else {
		parms.put("AND_passwd_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_passwd_NOT_NULL", "Y");
	    } else {
		parms.put("AND_passwd_NOT_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_passwd_EQUALS", "Y");
	    } else {
		parms.put("AND_passwd_EQUALS", "Y");
	    }
	    parms.put("passwd", example.getPasswd());
	    break;
	case UserExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_passwd_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_passwd_NOT_EQUALS", "Y");
	    }
	    parms.put("passwd", example.getPasswd());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_passwd_GT", "Y");
	    } else {
		parms.put("AND_passwd_GT", "Y");
	    }
	    parms.put("passwd", example.getPasswd());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_passwd_GE", "Y");
	    } else {
		parms.put("AND_passwd_GE", "Y");
	    }
	    parms.put("passwd", example.getPasswd());
	    break;
	case UserExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_passwd_LT", "Y");
	    } else {
		parms.put("AND_passwd_LT", "Y");
	    }
	    parms.put("passwd", example.getPasswd());
	    break;
	case UserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_passwd_LE", "Y");
	    } else {
		parms.put("AND_passwd_LE", "Y");
	    }
	    parms.put("passwd", example.getPasswd());
	    break;
	case UserExample.EXAMPLE_LIKE:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_passwd_LIKE", "Y");
	    } else {
		parms.put("AND_passwd_LIKE", "Y");
	    }
	    parms.put("passwd", example.getPasswd());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    private Map getmailExampleParms(UserExample example) {
	Map parms = new HashMap();
	switch (example.getMail_Indicator()) {
	case UserExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_mail_NULL", "Y");
	    } else {
		parms.put("AND_mail_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_mail_NOT_NULL", "Y");
	    } else {
		parms.put("AND_mail_NOT_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_mail_EQUALS", "Y");
	    } else {
		parms.put("AND_mail_EQUALS", "Y");
	    }
	    parms.put("mail", example.getMail());
	    break;
	case UserExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_mail_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_mail_NOT_EQUALS", "Y");
	    }
	    parms.put("mail", example.getMail());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_mail_GT", "Y");
	    } else {
		parms.put("AND_mail_GT", "Y");
	    }
	    parms.put("mail", example.getMail());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_mail_GE", "Y");
	    } else {
		parms.put("AND_mail_GE", "Y");
	    }
	    parms.put("mail", example.getMail());
	    break;
	case UserExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_mail_LT", "Y");
	    } else {
		parms.put("AND_mail_LT", "Y");
	    }
	    parms.put("mail", example.getMail());
	    break;
	case UserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_mail_LE", "Y");
	    } else {
		parms.put("AND_mail_LE", "Y");
	    }
	    parms.put("mail", example.getMail());
	    break;
	case UserExample.EXAMPLE_LIKE:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_mail_LIKE", "Y");
	    } else {
		parms.put("AND_mail_LIKE", "Y");
	    }
	    parms.put("mail", example.getMail());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    private Map getmsnExampleParms(UserExample example) {
	Map parms = new HashMap();
	switch (example.getMsn_Indicator()) {
	case UserExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_msn_NULL", "Y");
	    } else {
		parms.put("AND_msn_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_msn_NOT_NULL", "Y");
	    } else {
		parms.put("AND_msn_NOT_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_msn_EQUALS", "Y");
	    } else {
		parms.put("AND_msn_EQUALS", "Y");
	    }
	    parms.put("msn", example.getMsn());
	    break;
	case UserExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_msn_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_msn_NOT_EQUALS", "Y");
	    }
	    parms.put("msn", example.getMsn());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_msn_GT", "Y");
	    } else {
		parms.put("AND_msn_GT", "Y");
	    }
	    parms.put("msn", example.getMsn());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_msn_GE", "Y");
	    } else {
		parms.put("AND_msn_GE", "Y");
	    }
	    parms.put("msn", example.getMsn());
	    break;
	case UserExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_msn_LT", "Y");
	    } else {
		parms.put("AND_msn_LT", "Y");
	    }
	    parms.put("msn", example.getMsn());
	    break;
	case UserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_msn_LE", "Y");
	    } else {
		parms.put("AND_msn_LE", "Y");
	    }
	    parms.put("msn", example.getMsn());
	    break;
	case UserExample.EXAMPLE_LIKE:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_msn_LIKE", "Y");
	    } else {
		parms.put("AND_msn_LIKE", "Y");
	    }
	    parms.put("msn", example.getMsn());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    private Map getskypeExampleParms(UserExample example) {
	Map parms = new HashMap();
	switch (example.getSkype_Indicator()) {
	case UserExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_skype_NULL", "Y");
	    } else {
		parms.put("AND_skype_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_skype_NOT_NULL", "Y");
	    } else {
		parms.put("AND_skype_NOT_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_skype_EQUALS", "Y");
	    } else {
		parms.put("AND_skype_EQUALS", "Y");
	    }
	    parms.put("skype", example.getSkype());
	    break;
	case UserExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_skype_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_skype_NOT_EQUALS", "Y");
	    }
	    parms.put("skype", example.getSkype());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_skype_GT", "Y");
	    } else {
		parms.put("AND_skype_GT", "Y");
	    }
	    parms.put("skype", example.getSkype());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_skype_GE", "Y");
	    } else {
		parms.put("AND_skype_GE", "Y");
	    }
	    parms.put("skype", example.getSkype());
	    break;
	case UserExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_skype_LT", "Y");
	    } else {
		parms.put("AND_skype_LT", "Y");
	    }
	    parms.put("skype", example.getSkype());
	    break;
	case UserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_skype_LE", "Y");
	    } else {
		parms.put("AND_skype_LE", "Y");
	    }
	    parms.put("skype", example.getSkype());
	    break;
	case UserExample.EXAMPLE_LIKE:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_skype_LIKE", "Y");
	    } else {
		parms.put("AND_skype_LIKE", "Y");
	    }
	    parms.put("skype", example.getSkype());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    private Map getlast_login_timeExampleParms(UserExample example) {
	Map parms = new HashMap();
	switch (example.getLastLoginTime_Indicator()) {
	case UserExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_last_login_time_NULL", "Y");
	    } else {
		parms.put("AND_last_login_time_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_last_login_time_NOT_NULL", "Y");
	    } else {
		parms.put("AND_last_login_time_NOT_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_last_login_time_EQUALS", "Y");
	    } else {
		parms.put("AND_last_login_time_EQUALS", "Y");
	    }
	    parms.put("lastLoginTime", example.getLastLoginTime());
	    break;
	case UserExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_last_login_time_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_last_login_time_NOT_EQUALS", "Y");
	    }
	    parms.put("lastLoginTime", example.getLastLoginTime());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_last_login_time_GT", "Y");
	    } else {
		parms.put("AND_last_login_time_GT", "Y");
	    }
	    parms.put("lastLoginTime", example.getLastLoginTime());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_last_login_time_GE", "Y");
	    } else {
		parms.put("AND_last_login_time_GE", "Y");
	    }
	    parms.put("lastLoginTime", example.getLastLoginTime());
	    break;
	case UserExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_last_login_time_LT", "Y");
	    } else {
		parms.put("AND_last_login_time_LT", "Y");
	    }
	    parms.put("lastLoginTime", example.getLastLoginTime());
	    break;
	case UserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_last_login_time_LE", "Y");
	    } else {
		parms.put("AND_last_login_time_LE", "Y");
	    }
	    parms.put("lastLoginTime", example.getLastLoginTime());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    private Map getonlineExampleParms(UserExample example) {
	Map parms = new HashMap();
	switch (example.getOnline_Indicator()) {
	case UserExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_online_NULL", "Y");
	    } else {
		parms.put("AND_online_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_online_NOT_NULL", "Y");
	    } else {
		parms.put("AND_online_NOT_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_online_EQUALS", "Y");
	    } else {
		parms.put("AND_online_EQUALS", "Y");
	    }
	    parms.put("online", example.getOnline());
	    break;
	case UserExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_online_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_online_NOT_EQUALS", "Y");
	    }
	    parms.put("online", example.getOnline());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_online_GT", "Y");
	    } else {
		parms.put("AND_online_GT", "Y");
	    }
	    parms.put("online", example.getOnline());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_online_GE", "Y");
	    } else {
		parms.put("AND_online_GE", "Y");
	    }
	    parms.put("online", example.getOnline());
	    break;
	case UserExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_online_LT", "Y");
	    } else {
		parms.put("AND_online_LT", "Y");
	    }
	    parms.put("online", example.getOnline());
	    break;
	case UserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_online_LE", "Y");
	    } else {
		parms.put("AND_online_LE", "Y");
	    }
	    parms.put("online", example.getOnline());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    private Map getvalidateExampleParms(UserExample example) {
	Map parms = new HashMap();
	switch (example.getValidate_Indicator()) {
	case UserExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_validate_NULL", "Y");
	    } else {
		parms.put("AND_validate_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_validate_NOT_NULL", "Y");
	    } else {
		parms.put("AND_validate_NOT_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_validate_EQUALS", "Y");
	    } else {
		parms.put("AND_validate_EQUALS", "Y");
	    }
	    parms.put("validate", example.getValidate());
	    break;
	case UserExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_validate_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_validate_NOT_EQUALS", "Y");
	    }
	    parms.put("validate", example.getValidate());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_validate_GT", "Y");
	    } else {
		parms.put("AND_validate_GT", "Y");
	    }
	    parms.put("validate", example.getValidate());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_validate_GE", "Y");
	    } else {
		parms.put("AND_validate_GE", "Y");
	    }
	    parms.put("validate", example.getValidate());
	    break;
	case UserExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_validate_LT", "Y");
	    } else {
		parms.put("AND_validate_LT", "Y");
	    }
	    parms.put("validate", example.getValidate());
	    break;
	case UserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_validate_LE", "Y");
	    } else {
		parms.put("AND_validate_LE", "Y");
	    }
	    parms.put("validate", example.getValidate());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    private Map getinput_timeExampleParms(UserExample example) {
	Map parms = new HashMap();
	switch (example.getInputTime_Indicator()) {
	case UserExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_NULL", "Y");
	    } else {
		parms.put("AND_input_time_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_NOT_NULL", "Y");
	    } else {
		parms.put("AND_input_time_NOT_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_EQUALS", "Y");
	    } else {
		parms.put("AND_input_time_EQUALS", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	case UserExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_input_time_NOT_EQUALS", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_GT", "Y");
	    } else {
		parms.put("AND_input_time_GT", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_GE", "Y");
	    } else {
		parms.put("AND_input_time_GE", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	case UserExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_LT", "Y");
	    } else {
		parms.put("AND_input_time_LT", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	case UserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_input_time_LE", "Y");
	    } else {
		parms.put("AND_input_time_LE", "Y");
	    }
	    parms.put("inputTime", example.getInputTime());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    private Map getupdate_timeExampleParms(UserExample example) {
	Map parms = new HashMap();
	switch (example.getUpdateTime_Indicator()) {
	case UserExample.EXAMPLE_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_update_time_NULL", "Y");
	    } else {
		parms.put("AND_update_time_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_NOT_NULL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_update_time_NOT_NULL", "Y");
	    } else {
		parms.put("AND_update_time_NOT_NULL", "Y");
	    }
	    break;
	case UserExample.EXAMPLE_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_update_time_EQUALS", "Y");
	    } else {
		parms.put("AND_update_time_EQUALS", "Y");
	    }
	    parms.put("updateTime", example.getUpdateTime());
	    break;
	case UserExample.EXAMPLE_NOT_EQUALS:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_update_time_NOT_EQUALS", "Y");
	    } else {
		parms.put("AND_update_time_NOT_EQUALS", "Y");
	    }
	    parms.put("updateTime", example.getUpdateTime());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_update_time_GT", "Y");
	    } else {
		parms.put("AND_update_time_GT", "Y");
	    }
	    parms.put("updateTime", example.getUpdateTime());
	    break;
	case UserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_update_time_GE", "Y");
	    } else {
		parms.put("AND_update_time_GE", "Y");
	    }
	    parms.put("updateTime", example.getUpdateTime());
	    break;
	case UserExample.EXAMPLE_LESS_THAN:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_update_time_LT", "Y");
	    } else {
		parms.put("AND_update_time_LT", "Y");
	    }
	    parms.put("updateTime", example.getUpdateTime());
	    break;
	case UserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
	    if (example.isCombineTypeOr()) {
		parms.put("OR_update_time_LE", "Y");
	    } else {
		parms.put("AND_update_time_LE", "Y");
	    }
	    parms.put("updateTime", example.getUpdateTime());
	    break;
	}
	return parms;
    }

    /**
     * This method was generated by Abator for iBATIS. This method corresponds to the database table user
     * @abatorgenerated  Tue Oct 24 10:06:07 CST 2006
     */
    private Map getExampleParms(UserExample example) {
	Map parms = new HashMap();
	parms.putAll(getuser_idExampleParms(example));
	parms.putAll(getrole_idExampleParms(example));
	parms.putAll(getnameExampleParms(example));
	parms.putAll(getreal_nameExampleParms(example));
	parms.putAll(getpasswdExampleParms(example));
	parms.putAll(getmailExampleParms(example));
	parms.putAll(getmsnExampleParms(example));
	parms.putAll(getskypeExampleParms(example));
	parms.putAll(getlast_login_timeExampleParms(example));
	parms.putAll(getonlineExampleParms(example));
	parms.putAll(getvalidateExampleParms(example));
	parms.putAll(getinput_timeExampleParms(example));
	parms.putAll(getupdate_timeExampleParms(example));
	return parms;
    }
}